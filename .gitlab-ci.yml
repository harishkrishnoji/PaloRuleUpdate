---
stages:
  - test
  - pages
  # - publish
  - clean

variables:
  # Unique image names for parallel builds
  COMPOSE_PROJECT_NAME: ${CI_PROJECT_NAME}_${CI_PIPELINE_ID}

default:
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  tags:
    - FTS_LAB_CONCURRENT

workflow:
  rules:
    # Needed to enable merged results pipelines
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event'"
    # The default trigger for the pipelines
    - if: "$CI_PIPELINE_SOURCE == 'push'"

test:
  stage: test
  script:
    - docker-compose up --build --force-recreate --quiet-pull --exit-code-from test test

# Requires 'package' and 'release' sections of the Dockerfile to be un-commented
# publish:
#   stage: publish
#   script:
#     - docker-compose up --build --force-recreate --quiet-pull --exit-code-from release release
#   only:
#     # This matches tags of the format "v1.0.0-alpha" where "-alpha" is optional
#     - "/^v\\d+\\.\\d+\\.\\d+(-\\w+)?$/"

pages:
  stage: pages
  script:
    - pip install -U sphinx myst-parser sphinx-autoapi sphinx-rtd-theme
    - sphinx-build -b html ./docs public
  artifacts:
    paths:
      - public
  rules:
    - if: "$CI_COMMIT_BRANCH == 'master'"
    - if: "$CI_COMMIT_BRANCH == 'main'"
  tags:
    - FTS_LAB_CONCURRENT

clean:
  stage: clean
  script:
    - docker-compose down --rmi local --remove-orphans --volumes || true
  when: always
